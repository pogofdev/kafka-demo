version: "3"
services:
#  akhq:
#    # build:
#    #   context: .
#    image: tchiotludo/akhq
#    environment:
#      AKHQ_CONFIGURATION: |
#        akhq:
#          connections:
#            docker-kafka-server:
#              properties:
#                bootstrap.servers: "kafka:9092"
#
#
#    ports:
#      - 8080:8080
#    links:
#      - kafka
#      - schema-registry

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    restart: always
    networks:
      - my-web-net-dev
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181


  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    networks:
      - my-web-net-dev
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    networks:
      - my-web-net-dev
    ports:
      - '9092:9092'
      - '9093:9093'
    environment:
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

#  kafka-demo:
#    build:
#      context: .
#      dockerfile: Dockerfile
#    #      dockerfile: Dockerfile.development
##    env_file: env_dev_vpbank
#    volumes:
#      - .:/app
#    ports:
#      - '9000:3000'


networks:
  my-web-net-dev:
    external: true
    name: custom_network
